package com.kraken.UserInterface;

import com.kraken.DataStructures.Items.Books.Enumerations.Type;
import com.kraken.DataStructures.Items.DiscItems.CD;
import com.kraken.main;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Curtis on 12/6/2016.
 * <p>
 * Picks the type of item to be added
 */
public class itemSelect {
    private JPanel item_select_panel;
    private JComboBox itemBox;
    private JTextArea title;
    private JButton okButton;

    public itemSelect() {

        okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Type type = null;
                switch (itemBox.getSelectedIndex()) {
                    case 0:
                        type = Type.HardCopy;
                        break;
                    case 1:
                        type = Type.eBook;
                        break;
                    case 2:
                        type = Type.AudioBook;
                        break;
                    case 3:
                        type = Type.DVD;
                        break;
                    case 4:
                    default:
                        type = Type.CD;
                        break;
                }

                JFrame frame = new JFrame("Add Item");
                frame.setContentPane(new addItem(type).getAdd_item_panel());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setPreferredSize(main.WINDOW_DIMENSION);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    public JPanel getItem_select_panel() {
        return item_select_panel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        item_select_panel = new JPanel();
        item_select_panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        itemBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Hard Copy Book");
        defaultComboBoxModel1.addElement("eBook");
        defaultComboBoxModel1.addElement("Audio Book");
        defaultComboBoxModel1.addElement("DVD");
        defaultComboBoxModel1.addElement("CD");
        itemBox.setModel(defaultComboBoxModel1);
        item_select_panel.add(itemBox, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        title = new JTextArea();
        title.setEditable(true);
        title.setText("Item Select");
        item_select_panel.add(title, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 50), null, 0, false));
        okButton = new JButton();
        okButton.setText("OK");
        item_select_panel.add(okButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return item_select_panel;
    }
}
